bplist00“_WebSubresources_WebMainResource£‘	
_WebResourceData_WebResourceMIMEType_WebResourceResponse^WebResourceURLO#ò
/* This file is used by default by all Scribble documents.
   See also "manual.css", which is added by default by the
   `scribble/manual` language. */

/* CSS seems backward: List all the classes for which we want a
   particular font, so that the font can be changed in one place.  (It
   would be nicer to reference a font definition from all the places
   that we want it.)

   As you read the rest of the file, remember to double-check here to
   see if any font is set. */

/* Monospace: */
.maincolumn, .refpara, .refelem, .tocset, .stt, .hspace, .refparaleft, .refelemleft {
  font-family: monospace;
}

/* Serif: */
.main, .refcontent, .tocview, .tocsub, .sroman, i {
  font-family: serif;
}

/* Sans-serif: */
.version, .versionNoNav, .ssansserif {
  font-family: sans-serif;
}
.ssansserif {
  font-size: 80%;
  font-weight: bold;
}

/* Emphasis: alternate italics and normal as we nest */
.emph {
  font-style: italic;
}
.emph .emph {
  font-style: normal;
}
.emph .emph .emph {
  font-style: italic;
}
.emph .emph .emph .emph {
  font-style: normal;
}
.emph .emph .emph .emph .emph {
  font-style: italic;
}
.emph .emph .emph .emph .emph .emph {
  font-style: normal;
}

/* ---------------------------------------- */

p, .SIntrapara {
  display: block;
  margin: 1em 0;
}

h2 { /* per-page main title */
  margin-top: 0;
}

h3, h4, h5, h6, h7, h8 {
  margin-top: 1.75em;
  margin-bottom: 0.5em;
}

.SSubSubSubSection {
  font-weight: bold;
  font-size: 0.83em; /* should match h5; from HTML 4 reference */
}

/* Needed for browsers like Opera, and eventually for HTML 4 conformance.
   This means that multiple paragraphs in a table element do not have a space
   between them. */
table p {
  margin-top: 0;
  margin-bottom: 0;
}

/* ---------------------------------------- */
/* Main */

body {
  color: black;
  background-color: #ffffff;
}

table td {
  padding-left: 0;
  padding-right: 0;
}

.maincolumn {
  width: 43em;
  margin-right: -40em;
  margin-left: 15em;
}

.main {
  text-align: left;
}

/* ---------------------------------------- */
/* Navigation */

.navsettop, .navsetbottom {
  background-color: #f0f0e0;
  padding: 0.25em 0 0.25em 0;
}

.navsettop {
  margin-bottom: 1.5em;
  border-bottom: 2px solid #e0e0c0;
}

.navsetbottom {
  margin-top: 2em;
  border-top: 2px solid #e0e0c0;
}

.navleft {
  margin-left: 1ex;
  position: relative;
  float: left;
  white-space: nowrap;
}
.navright {
  margin-right: 1ex;
  position: relative;
  float: right;
  white-space: nowrap;
}
.nonavigation {
  color: #e0e0e0;
}

.navleft .tocsettoggle {
  display: none;
}

.searchform {
  display: inline;
  margin: 0;
  padding: 0;
}

.nosearchform {
  display: none;
}

.searchbox {
  width: 16em;
  margin: 0px;
  padding: 0px;
  background-color: #eee;
  border: 1px solid #ddd;
  vertical-align: middle;
}

.searchbox::placeholder {
  text-align: center;
}

#contextindicator {
  position: fixed;
  background-color: #c6f;
  color: #000;
  font-family: monospace;
  font-weight: bold;
  padding: 2px 10px;
  display: none;
  right: 0;
  bottom: 0;
}

/* ---------------------------------------- */
/* Version */

.versionbox {
  position: relative;
  float: right;
  left: 2em;
  height: 0em;
  width: 13em;
  margin: 0em -13em 0em 0em;
}
.version {
  font-size: small;
}
.versionNoNav {
  font-size: xx-small; /* avoid overlap with author */
}

.version:before, .versionNoNav:before {
  content: "Version ";
}

/* ---------------------------------------- */
/* Margin notes */

.refpara, .refelem {
  position: relative;
  float: right;
  left: 2em;
  height: 0em;
  width: 13em;
  margin: 0em -13em 0em 0em;
}

.refpara, .refparaleft {
  top: -1em;
}

.refcolumn {
  background-color: #F5F5DC;
  display: block;
  position: relative;
  width: 13em;
  font-size: 85%;
  border: 0.5em solid #F5F5DC;
  margin: 0 0 0 0;
  white-space: normal; /* in case margin note is inside code sample */
}

.refcontent {
  margin: 0 0 0 0;
}

.refcontent p {
  margin-top: 0;
  margin-bottom: 0;
}

.refparaleft, .refelemleft {
  position: relative;
  float: left;
  right: 2em;
  height: 0em;
  width: 13em;
  margin: 0em 0em 0em -13em;
}

.refcolumnleft {
  background-color: #F5F5DC;
  display: block;
  position: relative;
  width: 13em;
  font-size: 85%;
  border: 0.5em solid #F5F5DC;
  margin: 0 0 0 0;
}


/* ---------------------------------------- */
/* Table of contents, inline */

.toclink {
  text-decoration: none;
  color: blue;
  font-size: 85%;
}

.toptoclink {
  text-decoration: none;
  color: blue;
  font-weight: bold;
}

/* ---------------------------------------- */
/* Table of contents, left margin */

.tocset {
  position: relative;
  float: left;
  width: 12.5em;
  margin-right: 2em;
}
.tocset td {
  vertical-align: text-top;
}

.tocview {
  text-align: left;
  background-color: #f0f0e0;
}

.tocsub {
  text-align: left;
  margin-top: 0.5em;
  background-color: #f0f0e0;
}

.tocviewlist, .tocsublist {
  margin-left: 0.2em;
  margin-right: 0.2em;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
}
.tocviewlist table {
  font-size: 82%;
}

.tocviewlisttopspace {
  margin-bottom: 1em;
}

.tocviewsublist, .tocviewsublistonly, .tocviewsublisttop, .tocviewsublistbottom {
  margin-left: 0.4em;
  border-left: 1px solid #bbf;
  padding-left: 0.8em;
}
.tocviewsublist {
  margin-bottom: 1em;
}
.tocviewsublist table,
.tocviewsublistonly table,
.tocviewsublisttop table,
.tocviewsublistbottom table {
  font-size: 75%;
}

.tocviewtitle * {
  font-weight: bold;
}

.tocviewlink {
  text-decoration: none;
  color: blue;
}

.tocviewselflink {
  text-decoration: underline;
  color: blue;
}

.tocviewtoggle {
  text-decoration: none;
  color: blue;
  font-size: 75%; /* looks better, and avoids bounce when toggling sub-sections due to font alignments */
}

.tocsublist td {
  padding-left: 1em;
  text-indent: -1em;
}

.tocsublinknumber {
  font-size: 82%;
}

.tocsublink {
  font-size: 82%;
  text-decoration: none;
}

.tocsubseclink {
  font-size: 82%;
  text-decoration: none;
}

.tocsubnonseclink {
  font-size: 82%;
  text-decoration: none;
  padding-left: 0.5em;
}

.tocsubtitle {
  font-size: 82%;
  font-style: italic;
  margin: 0.2em;
}

/* ---------------------------------------- */
/* Some inline styles */

.indexlink {
  text-decoration: none;
}

.nobreak {
  white-space: nowrap;
}

pre { margin-left: 2em; }
blockquote { margin-left: 2em; }

ol          { list-style-type: decimal; }
ol ol       { list-style-type: lower-alpha; }
ol ol ol    { list-style-type: lower-roman; }
ol ol ol ol { list-style-type: upper-alpha; }

.SCodeFlow {
  display: block;
  margin-left: 1em;
  margin-bottom: 0em;
  margin-right: 1em;
  margin-top: 0em;
  white-space: nowrap;  
}

.SVInsetFlow {
  display: block;
  margin-left: 0em;
  margin-bottom: 0em;
  margin-right: 0em;
  margin-top: 0em;
}

.SubFlow {
  display: block;
  margin: 0em;
}

.boxed {
  width: 100%;
  background-color: #E8E8FF;
}

.hspace {
}

.slant {
  font-style: oblique;
}

.badlink {
  text-decoration: underline;
  color: red;
}

.plainlink {
  text-decoration: none;
  color: blue;
}

.techoutside       { text-decoration: underline; color: #b0b0b0; }
.techoutside:hover { text-decoration: underline; color: blue; }

/* .techinside:hover doesn't work with FF, .techinside:hover>
   .techinside doesn't work with IE, so use both (and IE doesn't
   work with inherit in the second one, so use blue directly) */
.techinside                    { color: black; }
.techinside:hover              { color: blue; }
.techoutside:hover>.techinside { color: inherit; }

.SCentered {
  text-align: center;
}

.imageleft {
  float: left;
  margin-right: 0.3em;
}

.Smaller {
  font-size: 82%;
}

.Larger {
  font-size: 122%;
}

/* A hack, inserted to break some Scheme ids: */
.mywbr {
  display: inline-block;
  height: 0;
  width: 0;
  font-size: 1px;
}

.compact li p {
  margin: 0em;
  padding: 0em;
}

.noborder img {
  border: 0;
}

.SVerbatim {
  white-space: nowrap;
}

.SAuthorListBox {
  position: relative;
  float: right;
  left: 2em;
  top: -2.5em;
  height: 0em;
  width: 13em;
  margin: 0em -13em 0em 0em;
}
.SAuthorList {
  font-size: 82%;
}
.SAuthorList:before {
  content: "by ";
}
.author {
  display: inline;
  white-space: nowrap;
}

/* print styles : hide the navigation elements */
@media print {
  .tocset,
  .navsettop,
  .navsetbottom { display: none; }
  .maincolumn {
    width: auto;
    margin-right: 13em;
    margin-left: 0;
  }
}

/** Begin headings */

/* Hide the button group by default, but show them on hovering the heading title */
.button-group {
    padding-left: 0.3em;
    visibility: hidden;
    position: absolute;
}
.heading:hover > .button-group {
    visibility: visible;
}

.button-group > a {
    margin: 0 0.25em;
}

.button-group > a, .button-group > a:hover {
    text-decoration: none;
}

.heading-anchor {
    font-size: 60%;
    /* A trick to color an emoji from https://stackoverflow.com/questions/32413731/color-for-unicode-emoji */
    color: transparent;
    text-shadow: 0 0 0 gray;
    vertical-align: 5%;
}

.heading-source {
    visibility: hidden;
}
Xtext/cssObplist00‘
X$versionY$archiverT$topX$objects Ü†_NSKeyedArchiver—	_WebResourceResponseÄ´#)*01234U$null€ !"V$class___nsurlrequest_proto_prop_obj_6R$1___nsurlrequest_proto_prop_obj_4___nsurlrequest_proto_prop_obj_3___nsurlrequest_proto_prop_obj_2___nsurlrequest_proto_prop_obj_1R$2___nsurlrequest_proto_prop_obj_0___nsurlrequest_proto_prop_obj_5R$0Ä
Ä	 Ä ÄÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_Yfile:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/scribble.css“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A∆mLf¢;íXtext/css#ò#Ôˇˇˇˇˇˇ“+,56]NSURLResponse¢7/]NSURLResponse    $ ) 2 7 I L b d p v ç î ∂ π € ˝ADfàãçèëìïóôõùü°®∞ºæ¿¬#.7=@IR[^glz}             8              ã_Yfile:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/scribble.css‘
Oå
/* See the beginning of "scribble.css". */

/* Monospace: */
.RktIn, .RktRdr, .RktPn, .RktMeta,
.RktMod, .RktKw, .RktVar, .RktSym,
.RktRes, .RktOut, .RktCmt, .RktVal,
.RktBlk {
  font-family: monospace;
  white-space: inherit;
}

/* Serif: */
.inheritedlbl {
  font-family: serif;
}

/* Sans-serif: */
.RBackgroundLabelInner {
  font-family: sans-serif;
}

/* ---------------------------------------- */
/* Inherited methods, left margin */

.inherited {
  width: 100%;
  margin-top: 0.5em;
  text-align: left;
  background-color: #ECF5F5;
}

.inherited td {
  font-size: 82%;
  padding-left: 1em;
  text-indent: -0.8em;
  padding-right: 0.2em;
}

.inheritedlbl {
  font-style: italic;
}

/* ---------------------------------------- */
/* Racket text styles */

.RktIn {
  color: #cc6633;
  background-color: #eeeeee;
  white-space: pre;
}

.RktInBG {
  background-color: #eeeeee;
}

.RktRdr {
}

.RktPn {
  color: #843c24;
}

.RktMeta {
  color: black;
}

.RktMod {
  color: black;
}

.RktOpt {
  color: black;
  font-style: italic;
}

.RktKw {
  color: black;
}

.RktErr {
  color: red;
  font-style: italic;
}

.RktVar {
  color: #262680;
  font-style: italic;
}

.RktSym {
  color: #262680;
}

.RktSymDef { /* used with RktSym at def site */
}

.RktValLink {
  text-decoration: none;
  color: blue;
}

.RktValDef { /* used with RktValLink at def site */
}

.RktModLink {
  text-decoration: none;
  color: blue;
}

.RktStxLink {
  text-decoration: none;
  color: black;
}

.RktStxDef { /* used with RktStxLink at def site */
}

.RktRes {
  color: #0000af;
}

.RktOut {
  color: #960096;
}

.RktCmt {
  color: #c2741f;
}

.RktVal {
  color: #228b22;
}

/* ---------------------------------------- */
/* Some inline styles */

.together {
  width: 100%;
}

.prototype, .argcontract, .RBoxed {
  white-space: nowrap;
}

.prototype td {
  vertical-align: text-top;
}

.RktBlk {
  white-space: inherit;
  text-align: left;
}

.RktBlk tr {
  white-space: inherit;
}

.RktBlk td {
  vertical-align: baseline;
  white-space: inherit;
}

.argcontract td {
  vertical-align: text-top;
}

.highlighted {
  background-color: #ddddff;
}

.defmodule {
  width: 100%;
  background-color: #F5F5DC;
}

.specgrammar {
  float: right;
}

.RBibliography td {
  vertical-align: text-top;
}

.leftindent {
 margin-left: 1em;
 margin-right: 0em;
}

.insetpara {
 margin-left: 1em;
 margin-right: 1em;
}

.Rfilebox {
}

.Rfiletitle {
  text-align: right;
  margin: 0em 0em 0em 0em;
}

.Rfilename {
  border-top: 1px solid #6C8585;
  border-right: 1px solid #6C8585;
  padding-left: 0.5em;
  padding-right: 0.5em;
  background-color: #ECF5F5;
}

.Rfilecontent {
  margin: 0em 0em 0em 0em;
}

.RpackageSpec {
  padding-right: 0.5em;
}

/* ---------------------------------------- */
/* For background labels */

.RBackgroundLabel {
   float: right;
   width: 0px;
   height: 0px;
}

.RBackgroundLabelInner {
   position: relative;
   width: 25em;
   left: -25.5em;
   top: 0px;
   text-align: right;
   color: white;
   z-index: 0;
   font-weight: bold;
}

.RForeground {
   position: relative;
   left: 0px;
   top: 0px;
   z-index: 1;
}

/* ---------------------------------------- */
/* History */

.SHistory {
  font-size: 82%;
}
Obplist00‘
X$versionY$archiverT$topX$objects Ü†_NSKeyedArchiver—	_WebResourceResponseÄ´#)*01234U$null€ !"V$class___nsurlrequest_proto_prop_obj_6R$1___nsurlrequest_proto_prop_obj_4___nsurlrequest_proto_prop_obj_3___nsurlrequest_proto_prop_obj_2___nsurlrequest_proto_prop_obj_1R$2___nsurlrequest_proto_prop_obj_0___nsurlrequest_proto_prop_obj_5R$0Ä
Ä	 Ä ÄÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ_Wfile:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/racket.css“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A∆mLf£WXtext/csså#Ôˇˇˇˇˇˇ“+,56]NSURLResponse¢7/]NSURLResponse    $ ) 2 7 I L b d p v ç î ∂ π € ˝ADfàãçèëìïóôõùü°®∞ºæ¿¬!,5;>GPY\ejx{             8              â_Wfile:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/racket.css‘Oè// Common functionality for PLT documentation pages

// Page Parameters ------------------------------------------------------------

var page_query_string = location.search.substring(1);
const page_args = new URLSearchParams(location.search);

function GetPageArg(key, def) {
  return page_args.get(key) || def;
}

function MergePageArgsIntoLink(a) {
  if (page_args.size === 0 || !a.dataset.pltdoc) return;
  a.href = MergePageArgsIntoUrl(a.href);
}

function MergePageArgsIntoUrl(href) {
  const url = new URL(href, window.location.href);
  for (const [key, val] of page_args) {
    if (url.searchParams.has(key)) continue;
    url.searchParams.append(key, val)
  }
  return url.href;
}

// Cookies --------------------------------------------------------------------

// Actually, try localStorage (a la HTML 5), first.

function GetCookie(key, def) {
  try {
    var v = localStorage[key];
    if (!v) v = def;
    return v;
  } catch (e) {
    var i, cookiestrs;
    try {
      if (document.cookie.length <= 0) return def;
      cookiestrs = document.cookie.split(/; */);
    } catch (e) { return def; }
    for (i = 0; i < cookiestrs.length; i++) {
      var cur = cookiestrs[i];
      var eql = cur.indexOf('=');
      if (eql >= 0 && cur.substring(0,eql) == key)
        return unescape(cur.substring(eql+1));
    }
    return def;
  }
}

function SetCookie(key, val) {
  try {
    localStorage[key] = val;
  } catch(e) {
    var d = new Date();
    d.setTime(d.getTime()+(365*24*60*60*1000));
    try {
      document.cookie =
        key + "=" + escape(val) + "; expires="+ d.toGMTString() + "; path=/";
    } catch (e) {}
  }
}

// note that this always stores a directory name, ending with a "/"
function SetPLTRoot(ver, relative) {
  var root = location.protocol + "//" + location.host
           + NormalizePath(location.pathname.replace(/[^\/]*$/, relative));
  SetCookie("PLT_Root."+ver, root);
}

// adding index.html works because of the above
function GotoPLTRoot(ver, relative) {
  var u = GetCookie("PLT_Root."+ver, null);
  if (u == null) return true; // no cookie: use plain up link
  // the relative path is optional, default goes to the toplevel start page
  if (!relative) relative = "index.html";
  location = u + relative;
  return false;
}

// Utilities ------------------------------------------------------------------

var normalize_rxs = [/\/\/+/g, /\/\.(\/|$)/, /\/[^\/]*\/\.\.(\/|$)/];
function NormalizePath(path) {
  var tmp, i;
  for (i = 0; i < normalize_rxs.length; i++)
    while ((tmp = path.replace(normalize_rxs[i], "/")) != path) path = tmp;
  return path;
}

// `noscript' is problematic in some browsers (always renders as a
// block), use this hack instead (does not always work!)
// document.write("<style>mynoscript { display:none; }</style>");

// Interactions ---------------------------------------------------------------

function DoSearchKey(event, field, ver, top_path) {
  var val = field.value;
  if (event && event.key === 'Enter') {
    var u = GetCookie("PLT_Root."+ver, null);
    if (u == null) u = top_path; // default: go to the top path
    u += "search/index.html?q=" + encodeURIComponent(val);
    u = MergePageArgsIntoUrl(u);
    location = u;
    return false;
  }
  return true;
}

function TocviewToggle(glyph, id) {
  var s = document.getElementById(id).style;
  var expand = s.display == "none";
  s.display = expand ? "block" : "none";
  glyph.innerHTML = expand ? "&#9660;" : "&#9658;";
}

function TocsetToggle() {
  document.body.classList.toggle("tocsetoverlay");
}

// Page Init ------------------------------------------------------------------

// Note: could make a function that inspects and uses window.onload to chain to
// a previous one, but this file needs to be required first anyway, since it
// contains utilities for all other files.
var on_load_funcs = [];
function AddOnLoad(fun) { on_load_funcs.push(fun); }
window.onload = function() {
  for (var i=0; i<on_load_funcs.length; i++) on_load_funcs[i]();
};

AddOnLoad(function(){
    var links = document.getElementsByTagName("a");
    for (var i=0; i<links.length; i++) MergePageArgsIntoLink(links[i]);
    var label = GetPageArg("ctxtname",false);
    if (!label) return;
    var indicator = document.getElementById("contextindicator");
    if (!indicator) return;
    indicator.innerHTML = label;
    indicator.style.display = "block";
  });

// Pressing "S" or "s" focuses on the "...search manuals..." text field
AddOnLoad(function(){
  window.addEventListener("keyup", function(e) {
    if ((e.key === 's' || e.key === 'S') && e.target === document.body) {
      var searchBox = document.getElementById('searchbox');
      if (searchBox) {
        searchBox.focus();
      }
    }
  }, false);
});
_text/javascriptO*bplist00‘
X$versionY$archiverT$topX$objects Ü†_NSKeyedArchiver—	_WebResourceResponseÄ´#)*01234U$null€ !"V$class___nsurlrequest_proto_prop_obj_6R$1___nsurlrequest_proto_prop_obj_4___nsurlrequest_proto_prop_obj_3___nsurlrequest_proto_prop_obj_2___nsurlrequest_proto_prop_obj_1R$2___nsurlrequest_proto_prop_obj_0___nsurlrequest_proto_prop_obj_5R$0Ä
Ä	 Ä ÄÄÄÄÄ”$%'(WNS.base[NS.relativeÄ ÄÄ__file:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/scribble-common.js“+,-.Z$classnameX$classesUNSURL¢-/XNSObject#A∆mLf£	t_text/javascriptè#Ôˇˇˇˇˇˇ“+,56]NSURLResponse¢7/]NSURLResponse    $ ) 2 7 I L b d p v ç î ∂ π € ˝ADfàãçèëìïóôõùü°®∞ºæ¿¬$)4=CFOXjmv{âå             8              ö__file:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/scribble-common.js’_WebResourceFrameName_WebResourceTextEncodingNameO?¡<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width, initial-scale=0.8"><title>Scheme 48 - Reference - Part I - Basics - Bindings - REPL</title><link rel="stylesheet" type="text/css" href="scribble.css" title="default"><link rel="stylesheet" type="text/css" href="racket.css" title="default"><link rel="stylesheet" type="text/css" href="scribble-style.css" title="default"><script type="text/javascript" src="scribble-common.js"></script><!--[if IE 6]><style type="text/css">.SIEHidden { overflow: hidden; }</style><![endif]--></head><body id="scribble-racket-lang-org"><div class="tocset"><div class="tocview"><div class="tocviewlist tocviewlisttopspace"><div class="tocviewtitle"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="width: 1em;"><a href="javascript:void(0);" title="Expand/Collapse" class="tocviewtoggle" onclick="TocviewToggle(this,&quot;tocview_0&quot;);">‚ñ∫</a></td><td></td><td><a href="" class="tocviewselflink" data-pltdoc="x">Scheme 48 -<wbr> Reference -<wbr> Part I -<wbr> Basics -<wbr> Bindings -<wbr> REPL</a></td></tr></tbody></table></div><div class="tocviewsublistonly" style="display: none;" id="tocview_0"><table cellspacing="0" cellpadding="0"><tbody><tr><td align="right">1&nbsp;</td><td><a href="#%28part._.Bindings_.Examples%29" class="tocviewlink" data-pltdoc="x">Bindings Examples</a></td></tr></tbody></table></div></div></div><div class="tocsub"><table class="tocsublist" cellspacing="0"><tbody><tr><td><span class="tocsublinknumber"></span><a href="#%28part._.Scheme_48_-_.Reference_-_.Part_.I_-_.Basics_-_.Bindings_-_.R.E.P.L%29" class="tocsubseclink" data-pltdoc="x">Scheme 48 -<wbr> Reference -<wbr> Part I -<wbr> Basics -<wbr> Bindings -<wbr> REPL</a></td></tr><tr><td><span class="tocsublinknumber">1<tt>&nbsp;</tt></span><a href="#%28part._.Bindings_.Examples%29" class="tocsubseclink" data-pltdoc="x">Bindings Examples</a></td></tr></tbody></table></div></div><div class="maincolumn"><div class="main"><h2 class="heading"><a name="(part._.Scheme_48_-_.Reference_-_.Part_.I_-_.Basics_-_.Bindings_-_.R.E.P.L)"></a>Scheme 48 - Reference - Part I - Basics - Bindings - REPL<span class="button-group"><a href="#(part._.Scheme_48_-_.Reference_-_.Part_.I_-_.Basics_-_.Bindings_-_.R.E.P.L)" class="heading-anchor" title="Link to here">üîó</a><span style="visibility: hidden"> </span></span></h2><h3 class="heading">1<tt>&nbsp;</tt><a name="(part._.Bindings_.Examples)"></a>Bindings Examples<span class="button-group"><a href="#(part._.Bindings_.Examples)" class="heading-anchor" title="Link to here">üîó</a><span style="visibility: hidden"> </span></span></h3><p>Here we define the potential environment operations for bindings:</p><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tbody><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">add</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">add</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">remove</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">remove</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">push-frame</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">push-frame</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">pop-frame</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">pop-frame</span><span class="RktPn">)</span></td></tr></tbody></table></blockquote><p>Have a look how such functionality may be defined</p><p></p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tbody><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><span class="RktSym"><span class="RktSymDef RktSym">binding</span></span><span class="hspace">&nbsp;</span><span class="RktVar">id</span><span class="hspace">&nbsp;</span><span class="RktVar">value</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>‚Üí<span class="hspace">&nbsp;</span><span class="RktSym">function?</span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">id</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym">string?</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">value</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym">any?/c</span></td></tr></tbody></table></blockquote></div><div class="SIntrapara">This function takes a id as first parameter and any valoue function or another binding as second parameter
and returns a function containing the binding</div><p></p><p></p><div class="SIntrapara">Example:
</div><div class="SIntrapara"><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tbody><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">binding</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">lambda</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">id</span><span class="hspace">&nbsp;</span><span class="RktSym">value</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">let</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">int-id</span><span class="hspace">&nbsp;</span><span class="RktSym">id</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">int-value</span><span class="hspace">&nbsp;</span><span class="RktSym">value</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">lambda</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">cons</span><span class="hspace">&nbsp;</span><span class="RktSym">int-id</span><span class="hspace">&nbsp;</span><span class="RktSym">int-value</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></tbody></table></blockquote></div><p></p><p></p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tbody><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><span class="RktSym"><span class="RktSymDef RktSym">frame-it</span></span><span class="hspace">&nbsp;</span><span class="RktVar">frame</span><span class="hspace">&nbsp;</span><span class="RktVar">binding</span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>‚Üí<span class="hspace">&nbsp;</span><span class="RktSym">list?</span></p></blockquote></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">frame</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym">list?</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktVar">binding</span><span class="hspace">&nbsp;</span>:<span class="hspace">&nbsp;</span><span class="RktSym">cons?</span></td></tr></tbody></table></blockquote></div><div class="SIntrapara">This function takes a frame and a new binding and adds the binding to the frame newly created
and given back so the binding is part of this frame which normaly is the actual environment level</div><p></p><p></p><div class="SIntrapara">Example:
</div><div class="SIntrapara"><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tbody><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">frame-it</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">lambda</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">frame</span><span class="hspace">&nbsp;</span><span class="RktSym">binding</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">let</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">new-frame</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">append</span><span class="hspace">&nbsp;</span><span class="RktSym">frame</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">list</span><span class="hspace">&nbsp;</span><span class="RktSym">binding</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktSym">new-frame</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></tbody></table></blockquote></div><p></p><p></p><div class="SIntrapara"><blockquote class="SVInsetFlow"><table cellspacing="0" cellpadding="0" class="boxed RBoxed"><tbody><tr><td><blockquote class="SubFlow"><div class="RBackgroundLabel SIEHidden"><div class="RBackgroundLabelInner"><p>procedure</p></div></div><p class="RForeground"><span class="RktPn">(</span><span class="RktSym"><span class="RktSymDef RktSym">environment</span></span><span class="RktPn"></span><span class="RktPn">)</span><span class="hspace">&nbsp;</span>‚Üí<span class="hspace">&nbsp;</span><span class="RktSym">function?</span></p></blockquote></td></tr></tbody></table></blockquote></div><div class="SIntrapara">This function takes no arguments it is the function to return a function representing the quasi singleton
of an environment which holds the frames and inside the frame the stack and the bindings which are newly
created entering a new block and the existing block is pushed back after leaving the block the
actual environent is thrown away and the last environment (frame) is popped from stack</div><p></p><p></p><div class="SIntrapara">Example:
</div><div class="SIntrapara"><blockquote class="SCodeFlow"><table cellspacing="0" cellpadding="0" class="RktBlk"><tbody><tr><td><span class="RktPn">(</span><span class="RktSym">define</span><span class="hspace">&nbsp;</span><span class="RktSym">environment</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">lambda</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">let</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">[</span><span class="RktSym">act-frame</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">frame-it</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">dummy</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">new-val</span><span class="RktPn">)</span><span class="RktPn">]</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="RktPn">[</span><span class="RktSym">frames</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">list</span><span class="RktPn">)</span><span class="RktPn">]</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">lambda</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">cmd</span><span class="hspace">&nbsp;</span><span class="RktSym">id</span><span class="hspace">&nbsp;</span><span class="RktSym">value</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">cond</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktPn">(</span><span class="RktSym">eq?</span><span class="hspace">&nbsp;</span><span class="RktSym">cmd</span><span class="hspace">&nbsp;</span><span class="RktSym">add</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktSym">set!</span><span class="hspace">&nbsp;</span><span class="RktSym">act-frame</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">frame-it</span><span class="hspace">&nbsp;</span><span class="RktSym">act-frame</span><span class="hspace">&nbsp;</span><span class="RktSym">id</span><span class="hspace">&nbsp;</span><span class="RktSym">value</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktPn">(</span><span class="RktSym">eq?</span><span class="hspace">&nbsp;</span><span class="RktSym">cmd</span><span class="hspace">&nbsp;</span><span class="RktSym">remove</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">none</span><span class="RktPn">)</span></td></tr><tr><td><span class="RktPn">(</span><span class="RktPn">(</span><span class="RktSym">eq?</span><span class="hspace">&nbsp;</span><span class="RktSym">cmd</span><span class="hspace">&nbsp;</span><span class="RktSym">push-frame</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">begin</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">set!</span><span class="hspace">&nbsp;</span><span class="RktSym">frames</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">append</span><span class="hspace">&nbsp;</span><span class="RktSym">frames</span><span class="hspace">&nbsp;</span><span class="RktSym">act-frame</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr><tr><td><span class="hspace">&nbsp;&nbsp;</span><span class="RktPn">(</span><span class="RktSym">set!</span><span class="hspace">&nbsp;</span><span class="RktSym">act-frame</span><span class="hspace">&nbsp;</span><span class="RktPn">(</span><span class="RktSym">frame-it</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">dummy</span><span class="hspace">&nbsp;</span><span class="RktVal">'</span><span class="RktVal">new-val</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span><span class="RktPn">)</span></td></tr></tbody></table></blockquote></div><p></p><p>This example is not complete but you can see a bit how bindings frames and different levels of environments can be handled if you
are interested to learn more about this mechanismn you can read for example the articles of Mr. Landine about the SECD machine concept</p></div></div><div id="contextindicator">&nbsp;</div></body></html>Ytext/htmlP_^file:///Users/hglabplh/IdeaProjects/hglabplh-tech.github.io/s48reference/ref/bind-example.htmlUUTF-8    1 5 > P f | ã$'$0'O'´'¥4D7a7ª7ƒJWJiMóM˘NNN9ç˛éé	éj                           ép